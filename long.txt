## Опыть сборки linux-headers
для последующей сборки драйвера экрана под Ubuntu 5.16 для Orange PI 3 LTS


обычно для сборки достаточно 

-----

sudo apt update

sudo apt install git build-essential linux-headers-current-[название архитектуры]

sudo apt-get install linux-headers-$(uname -r)

-----

но у меня на OrangePI ни под дебианом ни под убунтой этих пакетов в апт нет, их предлагается собирать через кросскомпилятор через официальную спец утилиту от орандж, которая сгенерит пакет заголовков и другие пакеты ядра \ uboot
http://www.orangepi.org/orangepiwiki/index.php/Orange_Pi_Zero_3#Linux_SDK.E2.80.94.E2.80.94orangepi-build_instruction


Так же можно взять исходники и скомпилить прямо на arm устройстве - долго но тогда других вариантов не нашел
еще люди собирают через - BuildRoot и другие сборщики https://4pda.to/forum/index.php?showtopic=1041048&st=1320#entry122679052  


------------------------

мой опыт новичка был на основе этих материалов

https://sergey1560.github.io/fb4s_howto/mks_ts35/ (то из за чего)
http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=3619 (инфа о смещениях для U boot образа)
https://davidaugustat.com/linux/how-to-compile-linux-kernel-on-ubuntu (общий для любых линуксосистем принцип)

с загрузчиком пока не сталкивался - в первый раз система дальше Kernel loading в serial не выводила - видимо make install не все образы перенес в boot папку и она крешилась - не вдавался в детали - во второй раз перепроверил симлинки в boot папке и все сработало


-------- Нерациональный способ с пересборкой ядра ---------------

вывод инфы о текущем ядре системы

uname -a
cat /proc/cpuinfo -- ядра

установка необходимых для сборки пакетов

apt-get install git fakeroot build-essential xz-utils libssl-dev bc
apt install dwarves

качаем с оф репозитория оранджпай подходящее ядро

https://github.com/orangepi-xunlong/linux-orangepi/tree/orange-pi-5.16-sunxi64

Обычно архитектура указана после версии ядра но не всегда явно можно понять какие процессора и материнки поддерживаются
в случае с Orange pi 3 lts (Allwinner H6 Cortex-A53) есть сборки с одной версией ядра но маркировка может быть и sunxi64 и sun50iw6 и обе эти ветки поддерживают устройство

После распаковки переходим в папку с сурсами ядра /usr/src/папка

копируем туда текущую конфигурацию cp -v /boot/config-$(uname -r) .config

(не пробовал) чтобы сборка была компактней можно оптимизировать конфиг make localmodconfig - перенастроит конфиг только под те устройства что есть в системе

далее выключаем некоторые проверки

$ scripts/config --disable SYSTEM_TRUSTED_KEYS
$ scripts/config --disable SYSTEM_REVOCATION_KEYS
$ scripts/config --set-str CONFIG_SYSTEM_TRUSTED_KEYS ""
$ scripts/config --set-str CONFIG_SYSTEM_REVOCATION_KEYS ""

далее можно выполнять сборку либо на самом устройстве либо где то еще потому что лучше иметь производительный комп для этого (процесс может занимать часы)

fakeroot make
(не пробовал) fakeroot make -j4 (распределить нагрузку на 4 ядра проца) 

fakeroot make -j6 
Если сборщик ругается на несоответствие версии компилятора (чтонибудь типо gcc-5.h - no such file)

можно попробовать установить нужную версию компилятора - 

apt install gcc-5
apt install g++-5

update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 5
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 5

update-alternatives --display gcc

5 версия есть на ветке Xenial добавлять в /etc/apt/sources.list по аналогии  jammy-backports jammy main

deb http://ports.ubuntu.com/ jammy main restricted universe multiverse
#deb-src http://ports.ubuntu.com/ jammy main restricted universe multiverse

deb http://ports.ubuntu.com/ jammy-security main restricted universe multiverse
#deb-src http://ports.ubuntu.com/ jammy-security main restricted universe multiverse

deb http://ports.ubuntu.com/ jammy-updates main restricted universe multiverse
#deb-src http://ports.ubuntu.com/ jammy-updates main restricted universe multiverse

deb http://ports.ubuntu.com/ jammy-backports main restricted universe multiverse
#deb-src http://ports.ubuntu.com/ jammy-backports main restricted universe multiverse

sudo apt update 
если ругается на старые ключи репозиториев то добавляем чере sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ИД_КЛЮЧА

После компиляции ядра

sudo make modules_install (доавит папку build с заголовками тоже)
sudo make install


** возможно инсталятор сам генерит но на всякий **

генерим uImage из сформированного в исходниках имеджа - [папка сурсов]/arch/arm64/boot

mkimage -A arm -O linux -T kernel -C none -a 0x40080000 -e 0x40080000 -n "OrangePiH6" -d Image uImage

кидаем его в boot/

**********


проверяем символьные ссылки - должны вести к новым ими

джам readlink /boot/Image.../boot/vmlinuz

ln -vfns /boot/vmlinuz-[новая версия] /boot/Image

sudo reboot

установка драйвера экрана

компилируем 
cd /usr/src/fb_st7796s-master/kernel_module/

make
sudo make install
make clean
sudo depmod -A

добавляем драйвер в образ загрузки при запуске системы

sudo bash -c 'echo "fb_st7796s" >> /etc/initramfs-tools/modules'
sudo update-initramfs -u

если видим что пишет в старый образ то проверить ссылки boot/Image boot/initrd - перепрописать туда ссылки на новые образы ядра и переустановить initrtramfs

sudo apt remove initramfs-tools
sudo apt clean
sudo apt install initramfs-tools

проверить есть ли драйвер в ядре
lsinitramfs  /boot/uInitrd-5.16.17-sun50iw6  |grep fb

корректно ли загружен 
lsmod | grep 7796

вывод от драйвера дисплея 
dmesg|grep 7796


добавить orangepiEnv.txt overlays=st7796s

сборка оверлея

dtc -O dtb -o /boot/dtb-5.16.17-sun50iw6/allwinner/overlay/sun50i-h6-st7796s.dtbo /boot/dtb-5.16.17-sun50iw6/allwinner/overlay/sun50i-h6-st7796s.dts

dtc -O dtb -o /boot/dtb/allwinner/overlay/sun50i-h6-st7796s.dtbo /boot/dtb/allwinner/overlay/sun50i-h6-st7796s.dts
